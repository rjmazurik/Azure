{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "SQLProject",
      "metadata": {
        "description": "Specifies a name for generating resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Specifies a username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "string",
      "defaultValue": "Thisisapassword1",
      "metadata": {
        "description": "Specifies a password for the Virtual Machine."
      }
    }
  },
  "variables": {
    "vNetName": "[concat(parameters('projectName'), '-vnet')]",
    "vNetAddressPrefixes": "10.0.0.0/16",
    "vNetSubnetName": "[concat(parameters('projectName'), '-subnet')]",
    "vNetSubnetAddressPrefix": "10.0.0.0/24",
    "vmName": "[concat(parameters('projectName'), '-vm')]",
    "publicIPAddressName": "[concat(parameters('projectName'), '-ip')]",
    "networkInterfaceName": "[concat(parameters('projectName'), '-nic')]",
    "networkSecurityGroupName": "[concat(parameters('projectName'), '-nsg')]",
    "networkSecurityGroupName2": "[concat(variables('vNetSubnetName'), '-nsg')]"
    
  },
  "resources": [
    {
        "type": "Microsoft.Resources/deployments", 
        "apiVersion": "2021-04-01",                
        "name": "WorkspaceTemplate",               
        "properties": {                            
          "mode": "Incremental",                   
          "templateLink": {
            "uri":"https://raw.githubusercontent.com/rjmazurik/Test/main/ConfigureWorkspaceTemplate.json",
            "contentVersion":"1.0.0.0"
          }
        }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh_rule",
            "properties": {
              "description": "Locks inbound down to ssh default port 22.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 123,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "comments": "Simple Network Security Group for subnet [variables('vNetSubnetName')]",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkSecurityGroupName2')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-sql",
            "properties": {
              "priority": 1010,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "1433",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[variables('vNetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNetAddressPrefixes')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('vNetSubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-12-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'WorkspaceTemplate')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "resources": [
      {
        "name": "my-custom-Linux-script",
        "type": "extensions", 
        "location": "[parameters('location')]",
        "apiVersion": "2018-10-01",
        "dependsOn": [
            "[variables('vmName')]"
        ],
        "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.1",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
                "fileUris": [
                  "https://raw.githubusercontent.com/rjmazurik/Test/main/SqlScript.bash"
                ],
                "commandToExecute": "bash ./SqlScript.bash"
            }
          }
        }, 
        {
          "name": "log-analytic-dependency-extension",
          "type": "extensions",
          "apiVersion": "2021-03-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), 'my-custom-Linux-script')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
            "type": "DependencyAgentLinux",
            "typeHandlerVersion": "9.5",
            "autoUpgradeMinorVersion": true
          }
        },
        {
            "name": "log-analytic-agent",
            "type": "extensions",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
              "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName'), 'my-custom-Linux-script')]"
            ],
            "properties": {
              "publisher": "Microsoft.EnterpriseCloud.Monitoring",
              "type": "OmsAgentForLinux",
              "typeHandlerVersion": "1.4",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "workspaceId": "[reference('WorkspaceTemplate').outputs.WorkspaceID.value]"
              },
              "protectedSettings": {
                "workspaceKey": "[reference('WorkspaceTemplate').outputs.WorkspaceKey.value]" 
              }
            }
          }
      ]
    }
  ],
  "outputs": {
    "ConnectionString": {
      "type": "string",
      "value": "[concat('\"', 'Server=',reference(concat('Microsoft.Network/publicIPAddresses/', variables('PublicIPAddressName'))).ipAddress,';Initial Catalog=TestDB;Uid=sa;Pwd=Thisisapassword1', '\"')]"
    }
  }
}
